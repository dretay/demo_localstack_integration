version: '3.8'

services:
  localstack:
    container_name: localstack
    image: localstack/localstack:latest
    ports:
      - "4566-4599:4566-4599"
    environment:
      - DEFAULT_REGION=us-east-2
      - SERVICES=apigateway,cloudformation,cloudwatch,lambda,iam,s3,sns,secretsmanager,sts
      - DEBUG=1
      - LAMBDA_EXECUTOR=docker
      - DOCKER_HOST=unix:///var/run/docker.sock
      - DATA_DIR=/tmp/localstack/data
      - HOST_TMP_FOLDER=/tmp/localstack
    volumes:
      - ./aws:/docker-entrypoint-initaws.d
      - './.localstack:/tmp/localstack'
      - "/var/run/docker.sock:/var/run/docker.sock"
    healthcheck:
      test:
        - CMD
        - bash
        - -c
        - awslocal s3 ls
          && awslocal cloudformation list-stacks
          && awslocal secretsmanager list-secrets
      interval: 5s
      timeout: 10s
      start_period: 10s
  postgres:
    image: "postgres:12"
    container_name: "postgres"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Password123
    ports:
      - "5432:5432"
    volumes:
      - ./.postgres/db_data:/var/lib/postgresql/data
      - ./psql/init.sql:/docker-entrypoint-initdb.d/init.sql

  demo_localstack_serverless:
    user: "${USER}:${USER}"
    build:
      context: ./demo_localstack_serverless
      dockerfile: Dockerfile
      args:
        - RUNUSER=${USER}
        - RUNUID=${UID}
    tty: true
    stdin_open: true
    depends_on:
      - localstack
      - postgres
    image: demo_localstack_serverless
    working_dir: /app
    volumes:
      - ./demo_localstack_serverless:/app
    container_name: demo_localstack_serverless
    environment:
      - AWS_REGION=us-east-2
      - AWS_ACCESS_KEY_ID=0000
      - AWS_SECRET_ACCESS_KEY=0000
      - LOCALSTACK_HOST=localstack

  demo_localstack_app:
    user: node
    stdin_open: true
    build:
      context: './demo_localstack_app'
      dockerfile: Dockerfile
      args:
        - RUNUSER=${USER}
        - RUNUID=${UID}
    image: "demo_localstack_app:latest"
    container_name: demo_localstack_app
    ports:
      - "3000:3000"
    volumes:
      - './demo_localstack_app:/bin/www'
      - '/bin/www/node_modules'
    depends_on:
      - localstack
      - postgres
    environment:
      - PORT=3000
      - AWS_REGION=us-east-2
      - AWS_ACCESS_KEY_ID=0000
      - AWS_SECRET_ACCESS_KEY=0000
    command: sh -c "dockerize -wait tcp://postgres:5432 -wait http://localstack:4572 -timeout 60s -wait-retry-interval 1s npm start"
  demo_localstack_api:
    user: node
    stdin_open: true
    build:
      context: './demo_localstack_api'
      dockerfile: Dockerfile
      args:
        - RUNUSER=${USER}
        - RUNUID=${UID}
    image: "demo_localstack_api:latest"
    container_name: demo_localstack_api
    ports:
      - "3001:3000"
    volumes:
      - './demo_localstack_api:/bin/www'
      - '/bin/www/node_modules'
    depends_on:
      - localstack
      - postgres
    environment:
      - PORT=3000
      - AWS_REGION=us-east-2
      - AWS_ACCESS_KEY_ID=0000
      - AWS_SECRET_ACCESS_KEY=0000
    command: sh -c "dockerize -wait tcp://postgres:5432 -wait http://localstack:4572 -timeout 60s -wait-retry-interval 1s npm start"
    
